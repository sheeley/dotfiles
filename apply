#! /usr/bin/env bash
set -e

PATH="$PATH:./bin"

OS=$(uname -a)
IS_MAC=
IS_NIX=
if [[ "$OS" == *"NixOS"* ]]; then
	IS_NIX=true
fi
if [[ "$OS" == *"Darwin"* ]]; then
	IS_MAC=true
fi

OFFLINE=""
if [[ "$1" == "--offline" ]]; then
	OFFLINE="--offline"
fi
set -u

if command -v scutil &>/dev/null; then
	rg --pcre2 'TODO:(?!.*# ignore)' || true # ignore
fi

HN=$(hostname_wrapper)

# minimally, yell if nix version out of date
upgrade_nix

set +e
if ! ssh-add -l >/dev/null; then
	ssh-add ~/.ssh/id_ed25519
fi
set -e

OSC="nixosConfigurations"
if [[ "$IS_MAC" ]]; then
	OSC="darwinConfigurations"

	set +e
	if ! xcode_license_accepted; then
		sudo xcodebuild -license
	fi
	set -e
fi

VALID_HOSTNAMES=$(get-flake-configurations)

if [[ ! "${VALID_HOSTNAMES[*]}" =~ $HN ]]; then
	echo "invalid hostname: '$HN'"
	if confirm "override hostname?"; then
		while true; do
			read -r FAUX_HOST
			if [[ "${VALID_HOSTNAMES[*]}" =~ $FAUX_HOST ]]; then
				if confirm "use $FAUX_HOST?"; then
					HN="$FAUX_HOST"
					break
				fi
			fi
		done
	else
		if [[ "$IS_MAC" ]]; then
			echo "sudo scutil --set LocalHostName ..."
		elif [[ "$IS_NIX" ]]; then
			echo "put in /etc/nixos/configuration.nix: "
			echo "networking.hostName = \"$HN\";"
			echo "sudo nixos-rebuild switch"
			echo "sudo reboot"
		fi
		exit 1
	fi
fi

if [[ "$IS_MAC" ]]; then
	nix build ".#${OSC}.${HN}.system" --impure --extra-experimental-features "nix-command flakes" $OFFLINE --show-trace
else
	nix build ".#${OSC}.${HN}.config.system.build.toplevel" --impure --extra-experimental-features "nix-command flakes" $OFFLINE --show-trace
fi

# if possible, diff the derivations and ask for input
if command -v nvd; then
	nvd diff /run/current-system result
	if opt_out "nvd ^ Continue?"; then
		exit 0
	fi

	# if command -v nix-diff; then
	# nix-diff --line-oriented --context 5 /run/current-system result
	# fi

	# if opt_out "nix-diff ^ Continue?"; then
	# 	exit 0
	# fi
fi

if [[ "$IS_MAC" ]]; then
	echo "darwin-rebuild"

	if [[ -f /etc/bashrc ]]; then
		sudo mv -f /etc/bashrc /etc/bashrc.backup-before-nix
	fi
	if [[ -f /etc/zshrc ]]; then
		sudo mv -f /etc/zshrc /etc/bashrc.backup-before-nix
	fi

	./result/sw/bin/darwin-rebuild switch --flake . --impure
else
	sudo nixos-rebuild switch --flake . --impure
fi

date >last-applied.txt

# source ~/.config/fish/config.fish
