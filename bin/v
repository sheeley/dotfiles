#! /usr/bin/env bash
set -euo pipefail
# set -x

# function that takes a path and returns the git root directory
get_git_root() {
	MATCH="$1"
	DIRNAME=$(dirname "$MATCH")
	set +e
	DIR=$(git -C "$DIRNAME" rev-parse --show-toplevel 2>/dev/null)
	set -e
	if [ "$DIR" = "" ]; then
		DIR="$DIRNAME"
	fi
	realpath "$DIR"
}

open_vim() {
	DIR="$1"
	FILE="$2"
	MOVE_CURSOR="-c wincmd l"
	if [[ "" = "$FILE" || "." = "$FILE" ]]; then
		FILE="$DIR"
		MOVE_CURSOR=""
	fi
	# echo "$1 $2"
	vim -c "Neotree $DIR" "$MOVE_CURSOR" "$FILE"
}

# check if file(s) were passed in - if not just open the directory the command was run in
if [ $# -eq 0 ]; then
	open_vim . .
	exit
fi

# if passed an absolute path
if [[ "$1" = /* ]]; then
	vim "$1"
fi
# if the file exists, open vim to the directory called and open the file in the editor
if [ -f "$1" ]; then
	DIR=$(get_git_root "$1")
	open_vim "$DIR" "$1"
	exit
fi

# if the file doesn't exist, check if there is a filename that contains the filename passed in
MATCH=$(fd --type file --glob "*$1*" .)
LINES=0
if [[ "$MATCH" != "" ]]; then
	LINES=$(echo "$MATCH" | wc -l)
fi

if [ "$LINES" -eq 0 ]; then
	# open_vim . .
	echo "not found"
	exit 1
fi

if [ "$LINES" -gt 1 ]; then
	MATCH=$(echo "$MATCH" | select-from)
fi

DIR=$(get_git_root "$MATCH")
open_vim "$DIR" "$MATCH"
